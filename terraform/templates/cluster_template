// StreamAlert Lambda Function
module "stream_alert_{{ cluster_name }}" {
  source                        = "modules/tf_stream_alert"
  account_id                    = "${lookup(var.account, "aws_account_id")}"
  region                        = "${lookup(var.clusters, "{{ cluster_name }}")}"
  prefix                        = "${lookup(var.account, "prefix")}"
  cluster                       = "{{ cluster_name }}"
  kms_key_arn                   = "${aws_kms_key.stream_alert_secrets.arn}"

  rule_processor_config         = "${var.rule_processor_config}"
  rule_processor_lambda_config  = "${var.rule_processor_lambda_config}"

  alert_processor_config        = "${var.alert_processor_config}"
  alert_processor_lambda_config = "${var.alert_processor_lambda_config}"
}

// Cloudwatch alerts for production Lambda functions
module "cloudwatch_monitoring_{{ cluster_name }}" {
  source           = "modules/tf_stream_alert_monitoring"
  sns_topic_arn   = "${module.stream_alert_{{ cluster_name }}.sns_topic_arn}"
  lambda_functions = [
    "${lookup(var.account, "prefix")}_{{ cluster_name }}_streamalert_rule_processor",
    "${lookup(var.account, "prefix")}_{{ cluster_name }}_streamalert_alert_processor"
  ]
}

// Kinesis Stream and Firehose to send data to the Lambda function
module "kinesis_{{ cluster_name }}" {
  source                  = "modules/tf_stream_alert_kinesis"
  account_id              = "${lookup(var.account, "aws_account_id")}"
  region                  = "${lookup(var.clusters, "{{ cluster_name }}")}"
  cluster_name            = "{{ cluster_name }}"
  firehose_s3_bucket_name = "${lookup(var.account, "prefix")}.{{ cluster_name }}.${lookup(var.firehose, "s3_bucket_suffix")}"
  stream_name             = "${lookup(var.account, "prefix")}_{{ cluster_name }}_stream_alert_kinesis"
  firehose_name           = "${lookup(var.account, "prefix")}_{{ cluster_name }}_stream_alert_firehose"
  username                = "${lookup(var.account, "prefix")}_{{ cluster_name }}_stream_alert_user"
  stream_config           = "${var.kinesis_streams_config["{{ cluster_name }}"]}"
}

// Enable a Kinesis Stream to send events to Lambda
module "kinesis_events_{{ cluster_name }}" {
  source                    = "modules/tf_stream_alert_kinesis_events"
  lambda_production_enabled = true
  lambda_role_id            = "${module.stream_alert_{{ cluster_name }}.lambda_role_id}"
  lambda_function_arn       = "${module.stream_alert_{{ cluster_name }}.lambda_arn}"
  kinesis_stream_arn        = "${module.kinesis_{{ cluster_name }}.arn}"
  role_policy_prefix        = "{{ cluster_name }}"
}
{% if s3_buckets %}
{% for s3_bucket_id in s3_buckets %}
module "s3_events_{{ cluster_name }}" {
  source               = "modules/tf_stream_alert_s3_events"
  lambda_function_arn  = "${module.stream_alert_{{ cluster_name }}.lambda_arn}"
  lambda_function_name = "${lookup(var.account, "prefix")}_{{ cluster_name }}_stream_alert_processor"
  s3_bucket_id         = "{{ s3_bucket_id}}"
  s3_bucket_arn        = "arn:aws:s3:::{{ s3_bucket_id }}"
  lambda_role_id       = "${module.stream_alert_{{ cluster_name }}.lambda_role_id}"
  lambda_role_arn      = "${module.stream_alert_{{ cluster_name }}.lambda_role_arn}"
}
{% endfor %}
{% endif %}

output "kinesis_{{ cluster_name }}_username" {
  value = "${module.kinesis_{{ cluster_name }}.username}"
}

output "kinesis_{{ cluster_name }}_access_key_id" {
  value = "${module.kinesis_{{ cluster_name }}.access_key_id}"
}

output "kinesis_{{ cluster_name }}_secret_key" {
  value = "${module.kinesis_{{ cluster_name }}.secret_key}"
}